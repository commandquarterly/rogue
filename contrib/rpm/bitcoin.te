policy_module(rogue, 1.100.1)

########################################
#
# Declarations
#

type rogue_t;
type rogue_exec_t;
init_daemon_domain(rogue_t, rogue_exec_t)

permissive rogue_t;

type rogue_initrc_exec_t;
init_script_file(rogue_initrc_exec_t)

type rogue_conf_t;
files_type(rogue_conf_t)

type rogue_var_lib_t;
files_type(rogue_var_lib_t)

type rogue_var_run_t;
files_type(rogue_var_run_t)

type rogue_port_t;
corenet_port(rogue_port_t)

########################################
#
# rogue local policy
#
allow rogue_t self:process { fork };

allow rogue_t self:fifo_file rw_fifo_file_perms;
allow rogue_t self:unix_stream_socket create_stream_socket_perms;

manage_dirs_pattern(rogue_t, rogue_conf_t, rogue_conf_t)
manage_files_pattern(rogue_t, rogue_conf_t, rogue_conf_t)

manage_dirs_pattern(rogue_t, rogue_var_lib_t, rogue_var_lib_t)
manage_files_pattern(rogue_t, rogue_var_lib_t, rogue_var_lib_t)
files_var_lib_filetrans(rogue_t, rogue_var_lib_t, { dir file })

manage_dirs_pattern(rogue_t, rogue_var_run_t, rogue_var_run_t)
manage_files_pattern(rogue_t, rogue_var_run_t, rogue_var_run_t)

sysnet_dns_name_resolve(rogue_t)
corenet_all_recvfrom_unlabeled(rogue_t)

allow rogue_t self:tcp_socket create_stream_socket_perms;
corenet_tcp_sendrecv_generic_if(rogue_t)
corenet_tcp_sendrecv_generic_node(rogue_t)
corenet_tcp_sendrecv_all_ports(rogue_t)
corenet_tcp_bind_generic_node(rogue_t)

gen_require(`
    type rogue_port_t;
')
allow rogue_t rogue_port_t:tcp_socket name_bind;

gen_require(`
    type rogue_port_t;
')
allow rogue_t rogue_port_t:tcp_socket name_connect;

domain_use_interactive_fds(rogue_t)

files_read_etc_files(rogue_t)

miscfiles_read_localization(rogue_t)

sysnet_dns_name_resolve(rogue_t)

allow rogue_t rogue_exec_t:file execute_no_trans;
allow rogue_t self:process setsched;
corecmd_exec_ls(rogue_t)
corenet_tcp_connect_http_port(rogue_t)
dev_read_urand(rogue_t)
fs_getattr_xattr_fs(rogue_t)
kernel_read_system_state(rogue_t)
